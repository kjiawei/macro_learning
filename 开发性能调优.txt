目录
1.系统性能定义:Throughput，吞吐量      Latency， 系统延迟
2.系统性能测试
3.定位性能瓶颈
4.常见的系统瓶颈
5.具体调优
1.数据库   
2.系统:I/O模型   多核 CPU    
3.网络:多路复用 网卡 tcp/udp 
4.代码: 字符串操作(strcpy, strcat 还是 strlen，最需要注意的是字符串子串匹配。所以，能用整型最好用整型);   多线程瓶颈就在于互斥和同步的锁上，以及线程上下文切换的成本，怎么样的少用锁或不用锁是根本（比如：多版本并发控制 (MVCC) 在分布式系统中的应用 中说的乐观锁可以解决性能问题），此外，还有读写锁也可以解决大多数是读操作的并发的性能问题;
内存分配-malloc/realloc/calloc 这样的系统调非常耗时,尽量少    ; 异步操作;语音和代码库-STL 某些容器的 size()==0  和 empty() 是不一样的，因为，size() 是 O(n) 复杂度，empty() 是 O(1) 的复杂度
5.算法:分而治之和预处理  哈希算法   过滤算法
6.文件系统


工具:性能检测    

6068项目性能优化
耗时操作有哪些?    如何查看到这些资源利用率    标准是多少      优化目标与计划     解决问题(死机等)的指引