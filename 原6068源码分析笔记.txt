虚析构函数
多态
A类中的showme函数前面没有virtual时，不论B类中的showme函数有没有vittual关键字，输出结果都是 B A。A类中的showme函数前面有virtual关键字，不论B类中的showme函数有没有virtual关键字，输出结果都是 B B。
  也就是说，在类的函数前面加virtual关键字时就是允许子类覆盖它。即使把子类的指针转换为基类指针时调用的也是子类的函数

虚析构函数
工厂模式中 ,实例化一个工厂类的时候只会调用抽象类的析构函数如果不在抽象类的析构函数前加virtual,一旦加了virtual就会调用子类的析构函数。具体书籍请参考effective   c++   3td。
  首先，每个派生类对象都有一个指向虚函数表的指针，访问任何虚函数都是间接通过这个指针进行的，之所以要用虚函数表，是因为调用一个虚函数的哪个版本是在运行过程（调用时指针所指的对象）才能确定的（动态绑定）。    相对于虚函数，实函数的调用机制就简单的多：由于每个实函数只有一个版本，因此调用地址在编译时即可确定（静态绑定）    析构函数也可以通过virtual修饰而声名为虚函数，虚析构函数与一般虚函数的不同之处在于：    1》它的重定义函数就是派生类的析构函数，但不要求同名。    2》一个虚析构函数的版本被调用后，接着就要调用执行基类版本，依次类推，直到调用执行了派生序列的最开始的那个虚析构函数版本为止。
  
 
