1,需要大内存，而且相对独立的时候
2，调用插件

1,fork
	创建进程：资源独立
	创建进程：成功则向父进程返回子进程的PID，向子进程返回0
		失败则返回-1

	

2，vfork
	创建进程：资源共享
	创建进程，子进程先跑，共享父进程的资源，父进程会一直等到子进程结束后才运行
		PS：必须用到标准进程退出函数


3，进程的退出：
		main函数的return只是函数结束标志，并不是进程退出


进程退出函数
	exit：
		先处理atexit注册过的函数，然后清除缓冲区，在调用系统的do_exit退出整个进程
	_exit：
		直接调用系统的do_exit退出整个进程

	负责将状态返回给父进程


	wait：等待子进程退出

	waitpid：等待指定进程退出



练习1：
		创建一条子进程，父进程打印"hello"，子进程打印 "world"
		打印完后父进程再创建两条进程打印一条打印"end"，一条打印"..."
		最后结束主进程



	exec：调度其他程序的函数
		传入参数：第一个参数应该传入你的执行文件名，最后一个参数必须是空指针


练习2:		
		创建一条子进程，让子进程去调度一个程序打印hello，然后父进程再打印world


