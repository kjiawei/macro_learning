进程与线程区别：
对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。

从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。

线程执行开销小，但不利于资源的管理和保护；而进程正相反。同时，线程适合于在SMP机器上运行，而进程则可以跨机器迁移。

线程（默认情况不可分离）退出自己回收(分离属性)，不需要主线程（主线程的话需要调用pthread_join去回收线程）
太抽象：

   线程是轻量级的进程
   线程是系统调度的最小单位
线程：线程是把系统分配给进程的资源拿了一部分用于支持自己的运行
   线程是在进程中创建的---》创建线程的那个进程称作主线程
                           被创建的线程称作子线程

1.定义
进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动,进程是系统进行资源分配和调度的一个独立单位.
线程是进程的一个实体,是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位.线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈),但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源.
2.关系
一个线程可以创建和撤销另一个线程;同一个进程中的多个线程之间可以并发执行.
相对进程而言，线程是一个更加接近于执行体的概念，它可以与同进程中的其他线程共享数据，但拥有自己的栈空间，拥有独立的执行序列。
